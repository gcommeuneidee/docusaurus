"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[100],{5788:(e,t,r)=>{r.d(t,{Iu:()=>p,yg:()=>m});var n=r(1504);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=s(r),c=a,m=g["".concat(u,".").concat(c)]||g[c]||d[c]||i;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[g]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3060:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(5072),a=(r(1504),r(5788));const i={sidebar_position:2},l="Git & VINCI Construction",o={unversionedId:"guide-git-vinci",id:"guide-git-vinci",title:"Git & VINCI Construction",description:"Pr\xe9requis : Avoir une installation li\xe9e au repo en local",source:"@site/guides/guide-git-vinci.md",sourceDirName:".",slug:"/guide-git-vinci",permalink:"/docusaurus/guides/guide-git-vinci",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\xc9changes avec le client",permalink:"/docusaurus/guides/guide-gestion"},next:{title:"HTACCESS",permalink:"/docusaurus/guides/guide-htaccess"}},u={},s=[{value:"Proc\xe9dure",id:"proc\xe9dure",level:2},{value:"Mise \xe0 jour du code sur la PPD",id:"mise-\xe0-jour-du-code-sur-la-ppd",level:3},{value:"Mettre \xe0 jour la PRD",id:"mettre-\xe0-jour-la-prd",level:3},{value:"/! Important",id:"-important",level:3},{value:"Retirer le repo existant (si besoin)",id:"retirer-le-repo-existant-si-besoin",level:3},{value:"Connecter mon dossier au repo distant",id:"connecter-mon-dossier-au-repo-distant",level:3},{value:"Commande utile",id:"commande-utile",level:2}],p={toc:s},g="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(g,(0,n.c)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"git--vinci-construction"},"Git & VINCI Construction"),(0,a.yg)("p",null,"Pr\xe9requis : Avoir une installation li\xe9e au repo en local"),(0,a.yg)("h2",{id:"proc\xe9dure"},"Proc\xe9dure"),(0,a.yg)("p",null,"\xc9tapes de mise \xe0 jour :"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Modification des fichiers"),(0,a.yg)("li",{parentName:"ul"},"Publication sur la branche de pr\xe9prod (PPD)"),(0,a.yg)("li",{parentName:"ul"},"Mise \xe0 jour du serveur de pr\xe9prod 30 minutes apr\xe8s le push"),(0,a.yg)("li",{parentName:"ul"},"V\xe9rification sur la PPD"),(0,a.yg)("li",{parentName:"ul"},"Appliquer les modifications \xe0 la prod (PRD)")),(0,a.yg)("h3",{id:"mise-\xe0-jour-du-code-sur-la-ppd"},"Mise \xe0 jour du code sur la PPD"),(0,a.yg)("p",null,"V\xe9rifier si on est sur la branch PPD"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git branch\n--- si besoin ---\ngit checkout PPD\n")),(0,a.yg)("p",null,"Commit :"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'git add .\ngit commit -m "Nom de ton commit"\ngit push origin PPD\n')),(0,a.yg)("h3",{id:"mettre-\xe0-jour-la-prd"},"Mettre \xe0 jour la PRD"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git checkout PRD\ngit merge PPD\ngit push origin PRD\n")),(0,a.yg)("h3",{id:"-important"},"/!\\ Important"),(0,a.yg)("p",null,"Une fois le push sur la PRD effectu\xe9, penser \xe0 se remettre sur la PPD pour les prochaines modifications"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git checkout PPD\n")),(0,a.yg)("h3",{id:"retirer-le-repo-existant-si-besoin"},"Retirer le repo existant (si besoin)"),(0,a.yg)("p",null,"Si un d\xe9p\xf4t existant ('gcom') est d\xe9j\xe0 configur\xe9 et doit \xeatre retir\xe9, utilisez la commande suivante :"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git remote remove origin\n")),(0,a.yg)("h3",{id:"connecter-mon-dossier-au-repo-distant"},"Connecter mon dossier au repo distant"),(0,a.yg)("p",null,"Connecter mon dossier au repo distant"),(0,a.yg)("p",null,"Pour connecter un dossier local \xe0 un repo Git distant, suivez les \xe9tapes suivantes :"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Initialiser le d\xe9p\xf4t local (si ce n'est pas d\xe9j\xe0 fait) :"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git init\n"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Ajouter le repo distant :"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git remote add origin <URL_DU_REPO>\n")),(0,a.yg)("p",{parentName:"li"},"Remplacez <URL_DU_REPO> par l'URL du d\xe9p\xf4t distant.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"V\xe9rifier la connexion au repo distant :"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git remote -v\n")),(0,a.yg)("p",{parentName:"li"},"Cela affichera les r\xe9f\xe9rences du d\xe9p\xf4t distant configur\xe9.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Pousser les modifications initiales :"),(0,a.yg)("p",{parentName:"li"},"Si c'est la premi\xe8re fois que vous connectez le r\xe9pertoire local au r\xe9p\xe9rtoire distant, vous devrez peut-\xeatre forcer le push initial :"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git push -u origin master\n")),(0,a.yg)("p",{parentName:"li"},"Cela enverra les modifications vers la branche principale (master ou main). Utilisez -u pour lier la branche locale \xe0 la branche distante."))),(0,a.yg)("h2",{id:"commande-utile"},"Commande utile"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Commande"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"R\xe9cup\xe9rer les modifications en ligne"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git pull"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"V\xe9rifier la branche actuelle"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git branch"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Changer de branche"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git checkout 'PPD'"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Ajouter tous les fichiers au commit"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git add ."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Afficher l'historique des commits"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git log"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Afficher le statut des fichiers"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git status"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Fusionner une branche"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git merge 'nom_branche'"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"R\xe9initialiser le dernier commit (en gardant les modifications)"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git reset --soft HEAD~1"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"R\xe9initialiser le dernier commit (en supprimant les modifications)"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git reset --hard HEAD~1"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Pousser les commits locaux vers le d\xe9p\xf4t distant"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git push origin 'nom_branche'"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Afficher le repo distant"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"git remote -v"))))))}d.isMDXComponent=!0}}]);